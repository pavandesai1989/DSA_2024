https://leetcode.com/problems/koko-eating-bananas/description/


range based binary search :  l is 1 and r will be max of array 

class Solution {
public:
    bool canEatAllBanana(vector<int>& piles,int h,int mid)
    {
        int cnt=0;
        for(auto ele:piles)
        {
            cnt += ele/mid;
            if(ele%mid !=0)
              cnt++;
        }
        return cnt<=h;
    }
    int minEatingSpeed(vector<int>& piles, int h) 
    {
        int n=piles.size();
        int l=1;
        int r=*max_element(piles.begin(),piles.end());

        while(l<r)
        {
            int mid = l + (r-l)/2;
            if(canEatAllBanana(piles,h,mid))
              r = mid;
            else
              l = mid+1;  
        }
        return l;
    }
};
