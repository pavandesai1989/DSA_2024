https://leetcode.com/problems/permutations-ii/description/

class Solution {
public:
    void helper(vector<int>& nums,int idx,vector<vector<int>>& res)
    {
        if(idx==nums.size())
        {
            res.push_back(nums);
            return;
        }
        
        unordered_set<int> uset;
        for(int i=idx;i<nums.size();i++)
        {
            if(uset.find(nums[i]) != uset.end()) //if present in set
               continue;
            //add in the set
            uset.insert(nums[i]);

            swap(nums[i],nums[idx]);
            helper(nums,idx+1,res);
            swap(nums[i],nums[idx]);   
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) 
    {
        vector<vector<int>> res;
        helper(nums,0,res);
        return res;
    }
};
