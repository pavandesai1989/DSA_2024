https://leetcode.com/problems/combination-sum/description/

class Solution {
public:
    void helper(int idx,int target,vector<int> ds,vector<int>& candidates,vector<vector<int>>& res)
    {
       //base case
       if(idx==candidates.size())
       {
          if(target==0)
             res.push_back(ds);
          return;
       }

       //pick case 
       if(candidates[idx]<=target)
       {
          ds.push_back(candidates[idx]);

          helper(idx,target-candidates[idx],ds,candidates,res);

          ds.pop_back();
       }

       //not pick case
       helper(idx+1,target,ds,candidates,res);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) 
    {
        vector<vector<int>> res;
        vector<int> ds;
        helper(0,target,ds,candidates,res);

        return res;
    }
};
