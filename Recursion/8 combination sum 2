https://leetcode.com/problems/combination-sum-ii/description/

class Solution {
public:
    void solve(int idx,int target,vector<int>& candidates,vector<int> ds,vector<vector<int>>& res)
    {
        if(idx == candidates.size())
        {
            if(target==0) //imp 
              res.push_back(ds);
            return;
        }

        if(candidates[idx]<=target)
        {
            ds.push_back(candidates[idx]);
            solve(idx+1,target-candidates[idx],candidates,ds,res);
            ds.pop_back();
        }

        while(idx+1<candidates.size() && candidates[idx]==candidates[idx+1])
          idx++;

        solve(idx+1,target,candidates,ds,res);
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) 
    {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> res;
        vector<int> ds;
        solve(0,target,candidates,ds,res);

        return res;
    }
};
