//https://leetcode.com/problems/move-zeroes/description/

*******brute force*******
class Solution {
public:
    void moveZeroes(vector<int>& nums) 
    {
        vector<int> temp;
        int n =nums.size();
        int cnt_zero = 0;

        for(auto ele:nums)
        {
            if(ele ==0 )
               cnt_zero++;
            else
               temp.push_back(ele);   
        }
        
        int k = 0;
        for(int i=0;i<temp.size();i++){
            nums[i] = temp[k++];
        }

        for(int i=temp.size();i<n;i++)
        {
            nums[i] = 0;
        }
    }
};

time : 3* o(n)
space : 0(n)

************optimal*********
void moveZeroes(vector<int>& nums) 
    {
        int pos_zero = -1;
        int n=nums.size();
        //find the pos of first zero. 
        for(int i=0;i<n;i++){
            if(nums[i]==0){
                pos_zero=i;
                break;
            }
        }

        if(pos_zero == -1)   //imp case
            return;

        for(int i=pos_zero+1;i<n;i++){
            if(nums[i] != 0){
                swap(nums[i],nums[pos_zero]);
                pos_zero++;
            }
        }
    }

    time : o(n)
    space : o(1)
